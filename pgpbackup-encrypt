#!/bin/bash

#TODO: Documentation

progname="PGP-Backup"
libname="Encryption"
version="v0.2.0-alpha1"

function checkFiles {
    local email=$1
    local path=$2

    find "$path" -maxdepth 1 -type f | while read i
    do
        if [ ! -f "../backup/$i.gpg" ] && [[ "$i" != *decrypt.sh ]] && [[ "$i" != *pgpbackup-decrypt ]]; then
            gpg -q --output "../backup/$i.gpg" --encrypt --recipient $email "$i"
        fi
    done
}

function handleDir {
    local depth=$1
    local email=$2
    local path=$3

    # Create necessary folders
    if [ "$path" = "." ]; then
        mkdir "../backup"
        mkdir "../tmp"
        cp "decrypt.sh" "../backup/decrypt.sh"
        cp "pgpbackup-decrypt" "../backup/pgpbackup-decrypt" > /dev/null
    fi

    if [ $depth -eq 0 ]; then
        local oldPath=$PWD
        if [ "$path" = "." ]; then
            folderPath="."
            folderName="backup"
        else
            cd "$path"
            folderPath="$(dirname "$path")"
            folderName="$(basename "$path")"
        fi
        find "." -maxdepth 1 ! -name "." ! -name "decrypt.sh" ! -name "pgpbackup-decrypt" | while read i
        do
            zip -qur "$oldPath/../tmp/$folderPath/$folderName.zip" "./$i"
        done
        cd "$oldPath"
        if [ "$path" == "." ]; then
            path=$folderName
        fi
        gpg -q --output "../backup/$path.zip.gpg" --encrypt --recipient $email "../tmp/$path.zip"
    else
        if [ "$path" != "." ]; then
            mkdir "../backup/$path"
            mkdir "../tmp/$path"
        fi

        # Handle files in directory
        checkFiles $email "$path"

        # Handle directories in directory
        find "$path" -maxdepth 1 ! -path "$path" -type d | while read i
        do
            if [ $depth -gt 0 ]; then
                handleDir $[$depth-1] $email "$i"
            elif [ $depth -lt 0 ]; then
                handleDir $depth $email "$i"
            fi
        done
    fi
}

#Check flags
depth=-1
while getopts ":d:hv" opt; do
    case $opt in
        d)
            #TODO: check for int
            depth=$OPTARG;;
        h)
            echo "Usage: pgpbackup-encrypt [-d depth] email"
            exit 0;;
        v)
            echo $progname "-" $libname
            echo $version
            exit 0;;
        \?)
            echo "Invalid option: -$OPTARG" >&2
            exit 1;;
        :)
            echo "Option -$OPTARG requires an argument." >&2
            exit 1;;
    esac
done
shift $(($OPTIND - 1))

echo $progname $version "-" $libname

#Parameters
if [ $# -ne 1 ]; then
    echo "Please provide an email to encrypt for as argument."
    exit 1
fi
email=$1

handleDir $depth $email .

# Tidy up
rm -r "../tmp"

echo "Finished encrypting!"
exit 0
